#!/bin/bash

#
# Basic setup options.  If you are running as the postgres user and
# are using PostgreSQL 8.4 or later, you normally don't need to
# change any of these.
#

BASEDIR=`pwd`
PGBENCHBIN=`which pgbench`
GNUPLOT=`which gnuplot`

# These values are for pgbench 8.4 and later
TESTDIR="$BASEDIR/tests-json"

# Use these values for pgbench 8.3
#TESTDIR="tests/tests-8.3"

# Results directory
RESULTSDIR="$BASEDIR/results"

# SKIPINIT should be set to 1 either when simulating a cold cache, or
# if you are not using the pgbench tables for your test
SKIPINIT=1

# Set TABBED to 1 to use Javascript for a multi-tabbed display format
TABBED=0

# Set OSDATA to 1 to collect OS data using vmstat and iostat
OSDATA=1

# Test/result database connection
TESTHOST=${TESTHOST:-"127.0.0.1"}
TESTUSER=${TESTUSER:-"postgres"}
TESTPASSWORD=${TESTPASSWORD:-""}
TESTPORT=${TESTPORT:-"5432"}
TESTDB=${TESTDB:-"pgbench"}

RESULTHOST=${RESULTHOST:-$TESTHOST}
RESULTUSER=${RESULTUSER:-$TESTUSER}
RESULTPASSWORD=${RESULTPASSWORD:-$TESTPASSWORD}
RESULTPORT=${RESULTPORT:-$TESTPORT}
RESULTDB="results"

#
# JSON benchmark setup options
#

# Set to 1 to initialize JSON benchmark tables
JSON_INIT=1

# JSON benchmark tables. Each has a different index strategy.
TABLE_JSON_PLAIN="json_benchmark_plain"
TABLE_JSON_GIN="json_benchmark_gin"
TABLE_JSON_JPO="json_benchmark_jpo"

# Set to the JSON table to benchmark
TEST_JSON_TABLES="$TABLE_JSON_PLAIN $TABLE_JSON_GIN $TABLE_JSON_JPO"

JSON_INSERT_FILE="insert-bulk.sql"
JSON_INSERT_PATH="$TESTDIR/$JSON_INSERT_FILE"

# Benchmark tests to run.
BENCHMARKS="insert select update"
